# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: python:3.7
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
cache:
  paths:
  - ".cache/pip"
  - venv/
  - "~/.local/bin"

before_script:
    - python3 -V  # Print out python version for debugging
    - python3 -m pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - python3 -m pip install -r requirements.txt


stages:
- lint
- pages
- test
- deploy


flake8:
  stage: lint
  script:
    - export PATH=$PATH:~/.local/bin
    # - python3 -m pip install flake8
    - python3 -m pip install -r test_requirements.txt
    - flake8 --max-line-length=80 --per-file-ignores="__init__.py:F401" ./*.py
    - flake8 --max-line-length=80 --per-file-ignores="__init__.py:F401" ./uuid_module/*.py

# coverage:
#   stage: lint
#   # image: python:3.7
#   tags:
#     - copilot
#   script:
#     - export PATH=$PATH:~/.local/bin
#     - python3 -m pip install -r test_requirements.txt
#     - pytest --cov-config=.coveragerc --cov=./ -vvv
#     - coverage xml --include="./**" -o coverage.xml
#   artifacts:
#     paths:
#       - coverage.xml
#     reports:
#       junit:
#         - coverage.xml
#   coverage: '/^TOTAL.+?(\d+\%)$/'

sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml

# pages:
#   stage: pages
#   needs: ["coverage"]
#   script:
#   - pip install pdoc
#   - pdoc -o docs/ -d google uuid_module
#   - mkdir ./public
#   - mv ./docs/* ./public/
#   artifacts:
#     paths:
#     - public
  # rules:
  # - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"

deploy_staging:
  stage: deploy
  image: ubuntu:latest
  tags:
    - copilot
  script:
    - copilot svc deploy --name smartsheet-data-sync-backend --env staging
    - docker rm -v $(docker ps -a -q -f status=exited) || true
    - docker rmi $(docker images -f "dangling=true" -q) || true
  environment:
    name: Staging
  only:
    - staging

deploy_prod:
  stage: deploy
  image: ubuntu:latest
  tags:
    - copilot
  script:
    - copilot svc deploy --name smartsheet-data-sync-backend --env prod
    - docker rm -v $(docker ps -a -q -f status=exited) || true
    - docker rmi $(docker images -f "dangling=true" -q) || true
  environment:
    name: Production
  only:
    - main
