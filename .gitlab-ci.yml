# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: python:3.7
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
cache:
  paths:
  - ".cache/pip"
  - venv/
stages:
- test
- pages
- deploy
before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt
linting:
  stage: test
  script:
  - pip install flake8
  - flake8 --max-line-length=80 ./*.py
  - flake8 --max-line-length=80 ./uuid_module/*.py
coverage:
  stage: test
  script:
    - pytest --cov=./ tests/
pages:
  stage: pages
  script:
  - pdoc -o docs/ -d google uuid_module
  - mkdir ./public
  - mv ./docs/* ./public/
  artifacts:
    paths:
    - public
  rules:
  - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
deploy_staging:
  stage: deploy
  script:
  - echo "Deploy to staging server"
  environment:
    name: Staging
deploy_prod:
  stage: deploy
  script: -echo "Deploy to production server"
  environment:
    name: Production
  when: manual
  only:
    - main

# after_script:
#   - docker build -t registry.gitlab-dev.video.xarth.tv/cmpbad/smartsheet-data-sync-gitlab .
#   - docker push registry.gitlab-dev.video.xarth.tv/cmpbad/smartsheet-data-sync-gitlab
#   - main
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
